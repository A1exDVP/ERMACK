title: Удаление файла с Windows через PT XDR
id: RAI_4301_0001
description: Удаление файла с Windows системы через агент PT XDR
author: '@ERMACK_COMMUNITY'
creation_date: 2022/11/01
modification_date: 2022/11/27
linked_software:
  - S0002
linked_response_actions: RA4301
tags:
  - file.delete
linked_artifacts:
  - A3002
  - A0003
requirements:
  software:
    means_of_action:
    - ID: S0002
      cpe-fs: 'cpe:2.3:a:positive_technologies:pt_xdr:1.*:*:*:*:*:*:*:*'    
    targets_of_action:
    - ID: S0003
      cpe-fs: 'cpe:2.3:o:microsoft:windows:-:*:*:*:*:*:*:*'
extended_description: |

  ## Базовые параметры

  `max_cache_elements` - размер кэша для хешей. Хеш каждого созданного файла попадает в этот кэш. При переполнении кэш начинает ротироваться по правилу FIFO. Рекомендуется выставить это значение >= 1000.  
  `timer_timeout` - интервал времени в миллисекундах, через который модуль проверяет наличие хеша, который хотим удалить в кэше.  

  Кроме базовых параметров, для корректной работы модуля в политике должны быть установлены еще два модуля:
   - *Sysmon installer*  
   - *Data collector from Windows Event Log*  

  > Для модуля `Data collector from Windows Event Log` добавляем в каналы журналов журнал сисмона (*Microsoft-Windows-Sysmon/Operational*)  
  > В модули, получающие необработанные события из журнала событий Windows нужно включить модуль `esc_file_remover`  

  ## Удаление по имени
  ### Запрос
  **Входные параметры:**
   - `filepath`: полный путь к файлу. Обратные слеши следует экранировать еще одним сшелом  
   - `ip`: ipv4 адрес эндпойнта  

  ```json
    {"filepath": "C:\\Users\\LNikiforov\\Desktop\\fileToRemove.txt", "ip": "10.125.124.10"}
  ```
  ### Ответ
  В любом случае пользователь получит ответ:
  ```json
    {
        "data": {
            "ip": "10.125.124.7",
            "filehash": "18c4d4773e3d5714cebfdba5f1431e9f"
        },
        "start_time": "05.05.22 12:06:21",
        "actions": [
            "esc_file_remover.PTEDR_ESC_Respond_Action_FileRemove_ByName"
        ],
        "event": "****"
    }
  ```
  В зависимости от успешности действия, event может принимать следующие значния:  
   - `PTEDR_ESC_Respond_Event_FileRemove_Success`: файл был успешно удален  
   - `PTEDR_ESC_Respond_Event_FileRemove_Fail`: возникла ошибка при удалении файла  



  ## Удаление по хешу
  ### Запрос
  **Входные параметры:**
   - `filehash`: md5 хеш файла
   - `ip`: ipv4 адрес эндпойнта

  ```json
  {"filehash": "18c4d4773e3d5714cebfdba5f1431e9f", "ip": "10.125.124.10"}
  ```

  ### Ответ
  В любом случае пользователь получит ответ:
  ```json
  {
      "data": {
          "ip": "10.125.124.7",
          "filehash": "18c4d4773e3d5714cebfdba5f1431e9f"
      },
      "start_time": "05.05.22 12:06:21",
      "actions": [
          "esc_file_remover.PTEDR_ESC_Respond_Action_FileRemove_ByHash"
      ],
      "event": "****"
  }
  ```
  В зависимости от успешности действия, event может принимать следующие значния:
   - `PTEDR_ESC_Respond_Event_FileRemove_Pending`: хеш не был найден в кэше, но помещен в очередь на ожидаение хеша
   - `PTEDR_ESC_Respond_Event_FileRemove_Success`: файл был успешно удален
   - `PTEDR_ESC_Respond_Event_FileRemove_Fail`: возникла ошибка при удалении файла

  ### Ограничения
  1. Sysmon смотрит не на все файлы, а на те, под которые он сконфигурован: exe файлы, специальные директории и т.д. Все это тюнится в конфиге сисмона в нужной политике. Поэтому мы можем передать хеш файла, который сисмон никогда не увидит с текущим конфигом и мы об этом никак не узнаем.
  1. Злоумышленник может переименовать exe файл в расширение, которое не видин sysmon, скопировать файл на целевую машину и переименовать обратно в exe. Такой файл никогда не попадет в кеш и не сможет быть удален модулем.
